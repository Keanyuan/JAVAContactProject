<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <bean id="moocAspect" class="com.anjiPlus.aopAdvice.MoocAspect"></bean>

    <bean id="aspectBiz" class="com.anjiPlus.aopAdvice.biz.AspectBiz"></bean>

    <!--声明-->
    <aop:config>
        <aop:aspect id="moocAspectAOP" ref="moocAspect">
            <!--匹配带Biz的类的所有方法-->
            <aop:pointcut id="moocPointcut" expression="execution(* com.anjiPlus.aopAdvice.biz.*Biz.*(..))"/>
            <!--前置通知中的 before的方法会在以biz结尾的类的方法执行之前调用-->
            <aop:before method="before" pointcut-ref="moocPointcut"/>
            <!--返回后通知 以biz结尾的类的方法返回之后调用-->
            <aop:after-returning method="afterReturning" pointcut-ref="moocPointcut"/>
            <!--抛出异常后的通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="moocPointcut"/>
            <!--方法结束之后调用的通知 无论方法是否正常结束都会执行-->
            <aop:after method="after" pointcut-ref="moocPointcut"/>
            <!--环绕通知-->
            <aop:around method="around" pointcut-ref="moocPointcut"/>
            <!--切面之前输出-->
            <aop:around method="aroundInit" pointcut="execution(* com.anjiPlus.aopAdvice.biz.AspectBiz.init(String, int )) and args(bizName, times)"/>
            <!--匹配到AspectBiz 会为他指定一个新的父类 把一个bean强制指定父类-->
            <aop:declare-parents types-matching="com.anjiPlus.aopAdvice.biz.*" implement-interface="com.anjiPlus.aopAdvice.Fit" default-impl="com.anjiPlus.aopAdvice.FitImpl"/>
        </aop:aspect>
    </aop:config>
</beans>